name: Build and deploy ASP.Net Core app to Azure Web App GroceryListHelper

on:
  push:
    branches:
      - master

jobs:
  remove-old-artifacts:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Remove old artifacts
      uses: c-hive/gha-remove-artifacts@v1
      with:
        age: '2 days' # '<number> <unit>', e.g. 5 days, 2 years, 90 seconds, parsed by Moment.js

  publish:
    needs: remove-old-artifacts
    runs-on: ubuntu-latest
    env:
      AZURE_WEBAPP_PACKAGE_PATH: 'publish'
      AddLogging: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      - name: Build
        run: dotnet build Server --configuration Release

      - name: Start Cosmos Db emulator
        run: |
          ipaddr="`ifconfig | grep "inet " | grep -Fv 127.0.0.1 | awk '{print $2}' | head -n 1`"
          docker run --publish 8081:8081 --publish 10250-10255:10250-10255 --memory 3g --cpus=2.0 --name=test-linux-emulator --env AZURE_COSMOS_EMULATOR_PARTITION_COUNT=10 --env AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true --env AZURE_COSMOS_EMULATOR_IP_ADDRESS_OVERRIDE=$ipaddr mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator

      - name: Run Tests
        run: dotnet test Tests -c Release --collect:"XPlat Code Coverage" --results-directory ./coverage --settings runsettings.xml --logger "console;verbosity=normal"

      - name: Install Playwright
        run: |
          dotnet build E2ETests -c Release
          pwsh E2ETests/bin/Release/net7.0/playwright.ps1 install

      - name: Run E2E Tests
        continue-on-error: true
        run: dotnet test E2ETests -c Release

      - name: Publish app
        run: dotnet publish Server -c Release -o "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'GroceryListHelper'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C99403358B7E4954BCBAE0769BA6A9BB }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
