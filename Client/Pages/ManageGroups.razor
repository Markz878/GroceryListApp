@page "/managegroups"
@inherits ManageGroupsBase

<AuthorizedView>
    <div class="container">
        @if (isCreatingNewGroup)
        {
            <fieldset id="add-group-form">
                <legend>Create cart group</legend>
                <input id="create-group-name" class="form-control" @bind="createCartGroupRequest.Name" maxlength="30" size="30" placeholder="Group name" />
                <div class="new-group-members-container">
                    <span>Members: </span>
                    @foreach (string email in createCartGroupRequest.OtherUsers)
                    {

                        <div class="new-group-member-container">
                            <span>@email</span>
                            <button class="delete-group-btn btn btn-danger" @onclick="() => RemoveNewMember(email)">&times;</button>
                        </div>
                    }
                </div>
                <div class="flex">
                    <button class="btn-success btn add-btn" @onclick="AddMember">+</button>
                    <input id="add-user-to-group" class="form-control" @bind="newMemberEmail.Email" size="30" placeholder="New member email" />
                </div>
                <button class="btn btn-success create-btn" @onclick=CreateGroup>Create group</button>
            </fieldset>
        }
        else
        {
            <button class="btn btn-success create-btn" @onclick=CreateGroup>Create group</button>
        }
        @if (cartGroups is null || cartGroups.Count == 0)
        {
            <p>You have no groups yet.</p>
        }
        else
        {
            @foreach (CartGroup group in cartGroups)
            {
                <fieldset>
                    @if (isEditingGroup != group)
                    {
                        <h4 @onclick="() => SelectCart(group.Id)">@group.Name</h4>
                        <button class="edit-group-btn btn btn-success" @onclick="() => EditGroup(group)" disabled="@(isEditingGroup != null)">
                            <i class="fa fa-edit" aria-hidden="true" />
                        </button>
                        <button class="delete-group-btn btn btn-danger" @onclick="() => ShowDeleteConfirm(group)">&times;</button>
                    }
                    else
                    {
                        <input id="edit-group-name-input" class="form-control-small" @bind="group.Name" />
                        <button class="edit-group-btn btn btn-success" @onclick="() => SubmitEditGroup(group)">
                            <i class="fa fa-check" aria-hidden="true" />
                        </button>
                        <button class="delete-group-btn btn btn-danger" @onclick="() => StopEditGroup()">&times;</button>
                    }
                    <p class="group-members">You, @string.Join(", ", group.OtherUsers)</p>
                </fieldset>
            }
        }
    </div>
    <Confirm Header="Confirm delete" Message="This will delete the group and its products for all group members, are you sure?" OkCallback="DeleteGroup" CancelCallback="CancelGroupDelete" @ref=confirm />
</AuthorizedView>
