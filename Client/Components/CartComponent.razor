@inherits CartComponentBase

<div role="rowheader" class="grid grid-cols-cart gap-2 justify-center align-middle w-full pt-2 font-semibold">
    <span class="text-center">Reorder</span>
    <span class="text-center">Collected</span>
    <div class="flex justify-center">
        <button @onclick="ChangeSortDirectionAndSortItems" class="@(ViewModel.IsPolling ? "cursor-auto" : "cursor-pointer")" aria-label="Sort items" disabled="@ViewModel.IsPolling">
            Product
        </button>
        @if (sortState != SortState.None && !ViewModel.IsPolling)
        {
            <img class="scale-50 h-6" src=@(sortState == SortState.Ascending ? "arrow-down.svg" : "arrow-up.svg") />
        }
    </div>
    <span class="text-center">Amount</span>
    <span class="text-center">Price</span>
    <span class="text-center">Total</span>
    <span></span>

    <span></span>
    <div class="flex justify-center"><button id="add-cartproduct-button" type="submit" class="btn btn-success" @onclick="AddNewProduct" aria-label="Add product">Add</button></div>
    <span>
        <input id="newproduct-name-input" type="text" list="products" class="form-control text-center" aria-label="Product name input" autocomplete="off" @bind="newProduct.Name" @onfocusout="GetItemPrice" @ref="NewProductNameBox" />
        <datalist id="products">
            @foreach (var product in ViewModel.StoreProducts.Where(x => !ViewModel.CartProducts.Select(y => y.Name).Contains(x.Name)))
            {
                <option value="@product.Name" />
            }
        </datalist>
    </span>
    <input id="newproduct-amount-input" type="number" step="1" min="1" class="form-control text-center" aria-label="Product amount input" @bind="newProduct.Amount" />
    <input id="newproduct-price-input" type="number" step="0.01" min="0" class="form-control text-center" aria-label="Product unit price input" @bind="newProduct.UnitPrice" />
    <span></span>
</div>
<div role="rowgroup" class="relative transition-[height]" style="height: @(ViewModel.CartProducts.Where(x => !ViewModel.ShowOnlyUncollected || !x.IsCollected).Count()*3+1)rem;">
    @foreach (CartProductUIModel item in ViewModel.CartProducts.Where(x => !ViewModel.ShowOnlyUncollected || !x.IsCollected))
    {
        <div role="row" class="absolute h-12 w-full grid grid-cols-cart transition-[top] motion-reduce:transition-none border-t-2 @GetRowClass(item)" style="top: @GetRowTop(item)rem;" @key=item.Name>
            @if (item != editingItem)
            {
                <button class="btn btn-primary leading-5 h-8 m-auto @(item==movingItem ? "bg-blue-800" : "")" aria-label="Reorder" @onclick="()=>Move(item)"><i class="fas fa-sort"></i></button>
                <input type="checkbox" class="scale-150 m-auto" checked="@item.IsCollected" aria-label="Product collected" @onchange=@((e)=>MarkItemCollected(e, item)) />
                <span class="m-auto @(item.IsCollected ? "line-through" : "")" aria-label="Product name">@item.Name</span>
                <span class="m-auto" aria-label="Amount">@item.Amount</span>
                <span class="m-auto" aria-label="Unit price">@item.UnitPrice.ToString("N2")</span>
                <span class="m-auto" aria-label="Total price">@item.Total.ToString("N2")</span>
                <div class="flex">
                    <button class="btn btn-success m-auto" @onclick="()=>StartEditItem(item)" aria-label="Edit product" disabled=@item.IsCollected><i class="fas fa-edit"></i></button>
                    <button class="btn btn-danger m-auto" @onclick="()=>RemoveProduct(item)" aria-label="Delete product" disabled=@item.IsCollected>X</button>
                </div>
            }
            else
            {
                <span></span>
                <span></span>
                <span class="m-auto @(item.IsCollected ? "line-through" : "")" aria-label="Product name">@item.Name</span>
                <input type="number" step="0.01" min="0" class="form-control text-center m-auto" aria-label="Edit amount" @bind="item.Amount" />
                <input type="number" step="0.01" min="0" class="form-control text-center my-auto mx-2" aria-label="Edit unit price" @bind="item.UnitPrice" />
                <span class="m-auto" aria-label="Total price">@item.Total.ToString("N2")</span>
                <button class="btn btn-success m-auto h-8 p-t-0 p-b-0 leading-4" @onclick=@(()=>UpdateCartProduct(item)) aria-label="Submit edit" disabled=@item.IsCollected>Submit</button>
            }
        </div>
    }
</div>
